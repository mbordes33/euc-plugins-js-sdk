"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[873],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=s(t),d=l,h=u["".concat(p,".").concat(d)]||u[d]||g[d]||i;return t?a.createElement(h,o(o({ref:n},c),{},{components:t})):a.createElement(h,o({ref:n},c))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,o=new Array(i);o[0]=d;var r={};for(var p in n)hasOwnProperty.call(n,p)&&(r[p]=n[p]);r.originalType=e,r[u]="string"==typeof e?e:l,o[1]=r;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7774:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>s});var a=t(7462),l=(t(7294),t(3905));const i={sidebar_position:7,sidebar_label:"EUC Plugins SDK"},o="Using the EUC plugins SDK",r={unversionedId:"sdk",id:"sdk",title:"Using the EUC plugins SDK",description:"\u26a0\ufe0f This part is still in development process, changes may happen frequently.",source:"@site/docs/sdk.md",sourceDirName:".",slug:"/sdk",permalink:"/euc-plugins-js-sdk/docs/sdk",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sdk.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,sidebar_label:"EUC Plugins SDK"},sidebar:"tutorialSidebar",previous:{title:"Softphone",permalink:"/euc-plugins-js-sdk/docs/softphone"}},p={},s=[{value:"Initializing your application",id:"initializing-your-application",level:2},{value:"Retrieving the EUC app context",id:"retrieving-the-euc-app-context",level:2},{value:"Interacting with the Web and Desktop application",id:"interacting-with-the-web-and-desktop-application",level:2},{value:"Opening and closing the left panel",id:"opening-and-closing-the-left-panel",level:3},{value:"Starting a call",id:"starting-a-call",level:3},{value:"Opening a link in the application",id:"opening-a-link-in-the-application",level:3},{value:"Creating a meeting",id:"creating-a-meeting",level:3},{value:"Opening a meeting lobby",id:"opening-a-meeting-lobby",level:3},{value:"Playing a sound",id:"playing-a-sound",level:3},{value:"Stopping a sound",id:"stopping-a-sound",level:3},{value:"Displaying a notification",id:"displaying-a-notification",level:3},{value:"Changing the navigation bar color",id:"changing-the-navigation-bar-color",level:3},{value:"Resetting the navigation bar color",id:"resetting-the-navigation-bar-color",level:3},{value:"Displaying a modal",id:"displaying-a-modal",level:3},{value:"Events",id:"events",level:3},{value:"User logs out",id:"user-logs-out",level:4},{value:"A call for the current user is incoming",id:"a-call-for-the-current-user-is-incoming",level:4},{value:"A call is made by the user (eg: outgoing call)",id:"a-call-is-made-by-the-user-eg-outgoing-call",level:4},{value:"A call is answered by the user",id:"a-call-is-answered-by-the-user",level:4},{value:"A call is hanged up",id:"a-call-is-hanged-up",level:4},{value:"Listening to Wazo Websocket message",id:"listening-to-wazo-websocket-message",level:4},{value:"Listening to meeting creation",id:"listening-to-meeting-creation",level:4},{value:"Listening navigation change in the app",id:"listening-navigation-change-in-the-app",level:4},{value:"Interacting with the Portal application",id:"interacting-with-the-portal-application",level:2},{value:"Events",id:"events-1",level:3},{value:"Check when the user is connected to a stack",id:"check-when-the-user-is-connected-to-a-stack",level:4},{value:"Check when the user is connected or switch to a tenant",id:"check-when-the-user-is-connected-or-switch-to-a-tenant",level:4}],c={toc:s};function u(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"using-the-euc-plugins-sdk"},"Using the EUC plugins SDK"),(0,l.kt)("p",null,"\u26a0\ufe0f This part is still in development process, changes may happen frequently."),(0,l.kt)("p",null,"After installing the SDK, you can now require it with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { app } from '@wazo/euc-plugins-sdk';\n")),(0,l.kt)("h2",{id:"initializing-your-application"},"Initializing your application"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"await app.initialize();\n")),(0,l.kt)("p",null,"This method is asynchronous so the EUC application can know that your app is registered and your app will acknowledge it. "),(0,l.kt)("h2",{id:"retrieving-the-euc-app-context"},"Retrieving the EUC app context"),(0,l.kt)("p",null,"After initializing your application, you can call :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { Context } from '@wazo/euc-plugins-sdk/types';\nconst context: Context = app.getContext();\n")),(0,l.kt)("p",null,"The context will give you access to the app information like :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"app: AppInfo"),": Information about the EUC application"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"locale: string"),": The locale code of the application."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"theme: Object"),": Colors used by the EUC app."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"host: AppHostInfo"),": Contains a ",(0,l.kt)("inlineCode",{parentName:"li"},"clientType")," value that can be ",(0,l.kt)("inlineCode",{parentName:"li"},"web")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"desktop")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"ios")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"android")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"extra: Object"),": Contains extra information about the app context, like the ",(0,l.kt)("inlineCode",{parentName:"li"},"contact")," when you use the ",(0,l.kt)("inlineCode",{parentName:"li"},"contactTab")," manifest context."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"user: UserInfo"),": Information about the connected user in the EUC app:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"token: string"),": The token that can be used for API calls"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"refreshToken: string"),": A refresh token that should be used if the ",(0,l.kt)("inlineCode",{parentName:"li"},"token")," expires"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uuid: string"),": The user uuid\nSee the ",(0,l.kt)("inlineCode",{parentName:"li"},"WDASession")," and the ",(0,l.kt)("inlineCode",{parentName:"li"},"PortalSession")," types for more information.")))),(0,l.kt)("h2",{id:"interacting-with-the-web-and-desktop-application"},"Interacting with the Web and Desktop application"),(0,l.kt)("h3",{id:"opening-and-closing-the-left-panel"},"Opening and closing the left panel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.closeLeftPanel();\napp.openLeftPanel();\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"await app.initialize();\n// Closing the web/desktop left panel when the page is loaded\napp.closeLeftPanel();\n\napp.onUnLoaded = () => {\n  // Re-opening the panel when the page is unloaded\n  app.openLeftPanel();\n};\n")),(0,l.kt)("h3",{id:"starting-a-call"},"Starting a call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.startCall({ targets , requestedModalities = ['audio'] });\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.startCall({ targets: '8008' , requestedModalities: ['video'] });\n")),(0,l.kt)("h3",{id:"opening-a-link-in-the-application"},"Opening a link in the application"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.openLink(url: string);\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// Opening the internal phonebook\napp.openLink('/phonebook/internal');\n")),(0,l.kt)("h3",{id:"creating-a-meeting"},"Creating a meeting"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.createMeeting(name: string, requireAuthorization = false, persistent = false);\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.createMeeting('My meeting from my custom app', true, true);\n\n// Wait for the meeting to be available\napp.onMeetingCreated = newMeeting => {\n};\n")),(0,l.kt)("h3",{id:"opening-a-meeting-lobby"},"Opening a meeting lobby"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.openMeetingLobby(extension: string);\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// Open the lobby when a meeting is created\napp.onMeetingCreated = newMeeting => {\n  app.openMeetingLobby(newMeeting.exten);\n};\n")),(0,l.kt)("h3",{id:"playing-a-sound"},"Playing a sound"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.playNewMessageSound(); // Play the sound when we receive a text message\napp.playIncomingCallSound(); // Play the incoming call sound (loop)\napp.playProgressSound(); // Play the ringback sound when we make a call (loop)\napp.playDoubleCallSound(); // Play the sound when another call is incoming\napp.playHangupSound(); // Play the hangup sound\n")),(0,l.kt)("h3",{id:"stopping-a-sound"},"Stopping a sound"),(0,l.kt)("p",null,'Sounds marked "loop" must be stopped using:'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.stopCurrentSound();\n")),(0,l.kt)("h3",{id:"displaying-a-notification"},"Displaying a notification"),(0,l.kt)("p",null,"Wazo will display browser or desktop notification depending on the environment where WDA is running."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.displayNotification(title: string, text: string);\n")),(0,l.kt)("h3",{id:"changing-the-navigation-bar-color"},"Changing the navigation bar color"),(0,l.kt)("p",null,"We can change the navigation bar color with a valid CSS color:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.changeNavBarColor(color: string);\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.changeNavBarColor('#8e6a3a');\napp.changeNavBarColor('white');\n")),(0,l.kt)("h3",{id:"resetting-the-navigation-bar-color"},"Resetting the navigation bar color"),(0,l.kt)("p",null,"We can reset to the default navigation bar color with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.resetNavBarColor();\n")),(0,l.kt)("h3",{id:"displaying-a-modal"},"Displaying a modal"),(0,l.kt)("p",null,"We can display a modal in the ",(0,l.kt)("inlineCode",{parentName:"p"},"backgroundScript")," with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.displayModal({ url, title, text, htmlText, height, width });\n")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"url")," is present, the modal will display an iframe with the content of the url.\nIf ",(0,l.kt)("inlineCode",{parentName:"p"},"htmlText")," is present, the modal will display this text in a html contact, otherwise the ",(0,l.kt)("inlineCode",{parentName:"p"},"text")," attribute will be used.\nThe ",(0,l.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"width")," accept valid CSS values, like ",(0,l.kt)("inlineCode",{parentName:"p"},"500px")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"80%"),"."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("p",null,"Displaying client data when receiving a call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onCallIncoming = async call => {\n  console.log('background onCallIncoming', call);\n  const clientData = await fetchClientData(call.number); // Where `fetchClientData` is a method that return client information from an extension\n  \n  app.displayModal({\n    title: `Incoming call for ${call.displayName}`,\n    text: `Last call was: ${clientData.lastCall} for : ${clientData.lastCallSubject}`,\n    height: '50%',\n    width: '70%',\n  });\n};\n")),(0,l.kt)("h3",{id:"events"},"Events"),(0,l.kt)("h4",{id:"user-logs-out"},"User logs out"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onLogout = () => {};\n")),(0,l.kt)("h4",{id:"a-call-for-the-current-user-is-incoming"},"A call for the current user is incoming"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onCallIncoming = (call: Call) =>  {\n  // Useful to react in a `backgroundScript`.\n};\n")),(0,l.kt)("h4",{id:"a-call-is-made-by-the-user-eg-outgoing-call"},"A call is made by the user (eg: outgoing call)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onCallMade = (call: Call) =>  {\n  // Useful to react in a `backgroundScript`.\n};\n")),(0,l.kt)("h4",{id:"a-call-is-answered-by-the-user"},"A call is answered by the user"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onCallAnswered = (call: Call) =>  {\n  // Useful to react in a `backgroundScript`.\n};\n")),(0,l.kt)("h4",{id:"a-call-is-hanged-up"},"A call is hanged up"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onCallHangedUp = (call: Call) =>  {\n  // Useful to react in a `backgroundScript`.\n};\n")),(0,l.kt)("h4",{id:"listening-to-wazo-websocket-message"},"Listening to Wazo Websocket message"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onWebsocketMessage = (message: MessageEvent) =>  {\n  // Useful to react in a `backgroundScript`.\n};\n")),(0,l.kt)("h4",{id:"listening-to-meeting-creation"},"Listening to meeting creation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onMeetingCreated = (meeting: Meeting) =>  {\n};\n")),(0,l.kt)("h4",{id:"listening-navigation-change-in-the-app"},"Listening navigation change in the app"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onRouteChanged = (location: Object, action: string) =>  {\n};\n")),(0,l.kt)("h2",{id:"interacting-with-the-portal-application"},"Interacting with the Portal application"),(0,l.kt)("h3",{id:"events-1"},"Events"),(0,l.kt)("h4",{id:"check-when-the-user-is-connected-to-a-stack"},"Check when the user is connected to a stack"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onConnectedToStack = (stackSession: Object) => {\n  \n};\n")),(0,l.kt)("h4",{id:"check-when-the-user-is-connected-or-switch-to-a-tenant"},"Check when the user is connected or switch to a tenant"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"app.onSwitchTenant = (uuid: string, name: string) => {\n  \n};\n")))}u.isMDXComponent=!0}}]);